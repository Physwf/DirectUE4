
#include "Common.dusf"


struct FOneColorVertexOutput
{
	float4 Position : SV_POSITION;
#if USING_VERTEX_SHADER_LAYER && USING_LAYERS
	uint LayerIndex : SV_RenderTargetArrayIndex;
#endif
};

#ifndef USING_NDC_POSITIONS
#define USING_NDC_POSITIONS 1
#endif

void MainVertexShader(
	in float4 InPosition : ATTRIBUTE0,
#if USING_VERTEX_SHADER_LAYER && USING_LAYERS
	in uint InstanceId : SV_InstanceID,
#endif
	out FOneColorVertexOutput Output
)
{
	Output.Position = InPosition;

#if !USING_NDC_POSITIONS
	DrawRectangle(InPosition, Output.Position);
#endif

#if USING_VERTEX_SHADER_LAYER && USING_LAYERS
	Output.LayerIndex = InstanceId;
#endif
}


#ifndef NUM_OUTPUTS
#define NUM_OUTPUTS 1
#endif

//These shaders used for RHIClear.  Don't use any global uniform variables here as it greatly complicates
//the state restoration for an inline shader clear.
void MainPixelShaderMRT(
	out float4 OutColor[NUM_OUTPUTS] : SV_Target0)
{
	for (int i = 0; i < NUM_OUTPUTS; i++)
	{
		OutColor[i] = ClearShaderUB.DrawColorMRT[i];
	}
}

void MainPixelShader(
	out float4 OutColor : SV_Target0)
{
	OutColor = ClearShaderUB.DrawColorMRT[0];
}